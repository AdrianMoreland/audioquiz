[versions]
projectApplicationId = "com.audioquiz"
projectVersionName = "1.0.0"
projectMinSdkVersion = "26"
projectTargetSdkVersion = "35"
projectCompileSdkVersion = "35"
projectVersionCode = "1"
dependencyAnalysis = "1.20.0"

jdk = "17"

kotlin = "2.0.20"
kotlinter = "3.16.0"
ksp = "2.0.20-1.0.25"
kotlinxImmutableCollection = "0.3.5"
androidGradlePlugin = "8.6.0"

ktx = "1.13.1"

detekt = "1.23.1"

hilt = "2.52"
androidHiltCompiler = "1.2.0"
hiltWork = "1.2.0"
hilt-navigation = "1.2.0"

javaxInject = "1"
lottieAnimation = "6.1.0"

coroutinesCore = "1.7.3"

lifecycle = "2.8.5"
lifecycleViewModelKtx = "2.8.5"
lifecycleRuntimeCompose = "2.8.5"

navigationCompose = "2.8.0"

retrofit = "2.9.0"
loggingInterceptor = "4.12.0"
chucker = "3.5.2"
kotlinx-serialization = "1.6.3"
kotlinx-serialization-converter = "1.0.0"

sqldelight = "2.0.1"

junit-jupiter = "5.11.0"
junitExt = "1.2.1"
coroutinesTest = "1.7.3"
mockitoKotlin = "4.1.0"
mockk = "1.13.7"
runner = "1.6.2"

workRuntimeKtx = "2.9.1"

windowsSizeClass = "1.3.0"
adaptive = "0.26.2-beta"

ktor = "2.3.5"

kotest = "5.7.2"
espressoCore = "3.6.1"

androidTools = "31.3.0"
androidxCoreSplashscreen = "1.0.1"
annotation = "1.8.2"
appcompat = "1.7.0"
coreKtx = "1.13.1"
credentials = "1.2.2"
dagger2 = "2.52"
 googleId = "1.1.1"
googleServices = "4.4.2"


lifecycleReactivestreams = "1.1.1"
material = "1.12.0"
navigation = "2.8.0"
rxjava = "3.1.9"
rxandroid = "3.0.2"
fragments = "1.8.3"
startupRuntime = "1.1.1"
viewmodels = "2.8.5"
mpandroidchart = "v3.1.0"
ucrop = "2.2.8"
glide = "4.16.0"
blurry = "4.0.1"
blurview = "version-2.0.3"
autofittextview = "0.2.1"
firebase_bom = "33.2.0"
firebase_auth = "23.0.0"
firebase_firestore = "25.1.0"
firebase_storage = "21.0.0"
firebase_appcheck = "18.0.0"
firebase_analytics = "22.1.0"
firebase_appcheck_safetynet = "18.0.0"
play-services-base = "18.5.0"
gson = "2.11.0"
mockito_core = "5.12.0"
modelmapper = "3.2.1"
leakcanary = "1.5.1"
play_services_auth = "21.2.0"
room = "2.6.1"
work = "2.9.1"

constraintlayout = "2.1.4"
workRxjava2 = "2.9.1"
timber = "5.0.1"

[libraries]
# BUILD LOGIC
# Dependencies of the included build-logic
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "androidGradlePlugin" }
detekt-gradlePlugin = { group = "io.gitlab.arturbosch.detekt", name = "detekt-gradle-plugin", version.ref = "detekt" }
room-gradlePlugin = { id = "androidx.room", version.ref="room" }
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
ktlint-kotlinter = { group = "org.jmailen.gradle", name = "kotlinter-gradle", version.ref = "kotlinter" }
ksp-gradlePlugin = { group = "com.google.devtools.ksp", name = "symbol-processing-gradle-plugin", version.ref = "ksp" }
dependency-analysis-gradle-plugin = { group = "com.autonomousapps", name = "dependency-analysis-gradle-plugin", version.ref = "dependencyAnalysis" }
## testing
kotest-assertionsCore = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runnerJUnit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
#######

kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

#Android
#Architecture Components
credentials = { group = "androidx.credentials", name = "credentials", version.ref = "credentials" }
credentials-play-services-auth = { group = "androidx.credentials", name = "credentials-play-services-auth", version.ref = "credentials" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxCoreSplashscreen" }
startup-runtime = { group = "androidx.startup", name = "startup-runtime", version.ref = "startupRuntime" }
livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata", version.ref = "lifecycle" }
fragment = { group = "androidx.fragment", name = "fragment", version.ref = "fragments" }
viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "viewmodels" }
lifecycle-reactivestreams = { module = "androidx.lifecycle:lifecycle-reactivestreams", version.ref = "lifecycle" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "lifecycle" }
#Navigation
navigation-fragment = { group = "androidx.navigation", name = "navigation-fragment", version.ref = "navigation" }
navigation-ui = { group = "androidx.navigation", name = "navigation-ui", version.ref = "navigation" }
annotation = { group = "androidx.annotation", name = "annotation", version.ref = "annotation" }
navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigation" }
navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigation" }
navigation-safe-args = { group = "androidx.navigation", name = "navigation-safe-args-gradle-plugin", version.ref = "navigation" }

# WorkManager
work-runtime = { group = "androidx.work", name = "work-runtime", version.ref = "work" }
work-compiler = { group = "androidx.work", name = "work-runtime-ktx", version.ref = "work" }
work-rxjava2 = { module = "androidx.work:work-rxjava2", version.ref = "workRxjava2" }
work-rxjava3 = { group = "androidx.work", name="work-rxjava3", version.ref = "work" }

#Room
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-rxjava3 = { group = "androidx.room", name = "room-rxjava3", version.ref = "room" }

#Google
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
#Dagger
dagger = { group = "com.google.dagger", name = "dagger", version.ref = "dagger2" }
dagger-compiler = { group = "com.google.dagger", name = "dagger-compiler", version.ref = "dagger2" }
#Hilt
hilt-agp = { group = "com.google.dagger", name = "hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }
hilt-android-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
hilt-ext-compiler = { group = "androidx.hilt", name = "hilt-compiler", version.ref = "androidHiltCompiler" }
hilt-navigation-fragment = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "hilt-navigation" }
hilt-work = { group = "androidx.hilt", name = "hilt-work", version.ref = "hiltWork" }
#Firebase
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebase_bom" }
firebase-auth = { group = "com.google.firebase", name = "firebase-auth" }
firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore" }
firebase-storage = { group = "com.google.firebase", name = "firebase-storage" }
firebase-appcheck = { group = "com.google.firebase", name = "firebase-appcheck" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics" }
firebase-appcheck-safetynet = { group = "com.google.firebase", name = "firebase-appcheck-safetynet", version.ref = "firebase_appcheck_safetynet" }
#Play Services Auth
play-services-base =  { group = "com.google.android.gms", name = "play-services-base", version.ref = "play-services-base" }
play-services-auth = { group = "com.google.android.gms", name = "play-services-auth", version.ref = "play_services_auth" }
googleid = { group = "com.google.android.libraries.identity.googleid", name = "googleid", version.ref = "googleId" }
#RxJava
javax-inject = { group = "javax.inject", name = "javax.inject", version.ref = "javaxInject" }
rxjava = { group = "io.reactivex.rxjava3", name = "rxjava", version.ref = "rxjava" }
rxandroid = { group = "io.reactivex.rxjava3", name = "rxandroid", version.ref = "rxandroid" }
#UI
mpandroidchart = { group = "com.github.PhilJay", name = "MPAndroidChart", version.ref = "mpandroidchart" }
ucrop = { group = "com.github.yalantis", name = "ucrop", version.ref = "ucrop" }
blurry = { group = "jp.wasabeef", name = "blurry", version.ref = "blurry" }
blurview = { group = "com.github.Dimezis", name = "BlurView", version.ref = "blurview" }
autofittextview = { group = "me.grantland", name = "autofittextview", version.ref = "autofittextview" }
glide = { group = "com.github.bumptech.glide", name = "glide", version.ref = "glide" }
glide-compiler = { group = "com.github.bumptech.glide", name = "compiler", version.ref = "glide" }
modelmapper = { group = "org.modelmapper", name = "modelmapper", version.ref = "modelmapper" }
#Gson
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

#Unused
livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle" }
fragment-ktx = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragments" }
constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

androidx-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "ktx" }

coroutines = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core-jvm", version.ref = "coroutinesCore" }

lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycleViewModelKtx" }

# Ktor
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
ktor-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-contentNegotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }

retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
kotlinx-serialization-converter = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "kotlinx-serialization-converter" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "loggingInterceptor" }
chucker = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
chucker-no-op = { group = "com.github.chuckerteam.chucker", name = "library-no-op", version.ref = "chucker" }

sqldelight-android = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { group = "app.cash.sqldelight", name = "coroutines-extensions", version.ref = "sqldelight" }
sqldelight-test = { group = "app.cash.sqldelight", name = "sqlite-driver", version.ref = "sqldelight" }



kotlinx-collections-immutable = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinxImmutableCollection" }

#Testing & Debugging
junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit-jupiter" }
coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutinesTest" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito_core" }
mokito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockitoKotlin" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
leakcanary-android = { group = "com.squareup.leakcanary", name = "leakcanary-android", version.ref = "leakcanary" }
leakcanary-android-no-op = { group = "com.squareup.leakcanary", name = "leakcanary-android-no-op", version.ref = "leakcanary" }


[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
room-gradle = { id = "androidx.room", version.ref="room" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotliner = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
audioquiz-android-library = { id = "audioquiz.android.library", version = "unspecified" }
audioquiz-android-application = { id = "audioquiz.android.application", version = "" }
audioquiz-hilt = { id = "audioquiz.android.hilt", version = "unspecified" }


[bundles]
kotest = [
    "kotest-assertionsCore",
    "kotest-property",
    "kotest-runnerJUnit5"
]
ktor = [
    "ktor-client-core",
    "ktor-client-okhttp",
    "ktor-contentNegotiation",
    "ktor-json",
    "ktor-logging"
]
hilt = [
    "hilt-android",
    "hilt-compiler"
]
rxjava = [
    "rxjava",
    "rxandroid"
]
room = ["room-runtime",
    "room-compiler",
    "room-rxjava3"
]
navigationJava = [
    "navigation-fragment",
    "navigation-ui"
]
firebase = [
    "firebase-bom",
    "firebase-auth",
    "firebase-firestore",
    "firebase-storage",
    "firebase-appcheck",
    "firebase-analytics"
]
glide = [
    "glide",
    "glide-compiler"
]